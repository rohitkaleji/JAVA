public class MultipleCatchBlock1 {
   public static void main(String[] args) {
   try{
     int a[]=new int[5];
	 
	 a[10]=7;
	 int b=4/0; 
    }
catch(ArithmeticException e)
{
System.out.println("Arithmetic Exception occurs");
}
catch(ArrayIndexOutOfBoundsException e) 
{
System.out.println("ArrayIndexOutOfBoundsException occurs");
}
catch(Exception e)
{
System.out.println("Parent Exception occurs");
}
System.out.println("rest of the code");
}
}








class TestFinallyBlock {
 public static void main(String args[]){

try{ 

 int data=25/0;
 System.out.println(data);
}
catch(NullPointerException e) {
System.out.println(e);
}
//executed regardless of exception occurred or not 
finally { 
System.out.println("finally block is always executed");
}
System.out.println("rest of the code...");
}
}









public class TestThrow1 {

//function to check if person is eligible to vote or not
    public static void validate(int age)   {
    if(age<18)
    try {
    //throw Arithmetic exception if not eligible to vote
    throw new ArithmeticException("Person is not eligible to vote");
}
    catch(ArithmeticException e) { 
	   System.out.println(e);
  }
  }
//main method
   public static void main(String args[]){
     //calling the function
   validate(13);
   System.out.println("rest of the code...");
   }
   }
